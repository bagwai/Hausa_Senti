{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "95e35357",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-07-10T11:03:14.058489Z",
     "iopub.status.busy": "2024-07-10T11:03:14.058016Z",
     "iopub.status.idle": "2024-07-10T11:03:15.195395Z",
     "shell.execute_reply": "2024-07-10T11:03:15.194307Z"
    },
    "papermill": {
     "duration": 1.147957,
     "end_time": "2024-07-10T11:03:15.198289",
     "exception": false,
     "start_time": "2024-07-10T11:03:14.050332",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/hau_stop.csv\n",
      "/kaggle/input/hau/hau/test.tsv\n",
      "/kaggle/input/hau/hau/dev.tsv\n",
      "/kaggle/input/hau/hau/train.tsv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "de0313a7",
   "metadata": {
    "papermill": {
     "duration": 0.005596,
     "end_time": "2024-07-10T11:03:15.209913",
     "exception": false,
     "start_time": "2024-07-10T11:03:15.204317",
     "status": "completed"
    },
    "tags": []
   },
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "7f3d3847",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T11:03:15.223203Z",
     "iopub.status.busy": "2024-07-10T11:03:15.222636Z",
     "iopub.status.idle": "2024-07-10T11:03:17.163594Z",
     "shell.execute_reply": "2024-07-10T11:03:17.162550Z"
    },
    "papermill": {
     "duration": 1.950916,
     "end_time": "2024-07-10T11:03:17.166406",
     "exception": false,
     "start_time": "2024-07-10T11:03:15.215490",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from sklearn.feature_extraction.text import TfidfVectorizer\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.metrics import accuracy_score, classification_report"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "7712a250",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T11:03:17.179539Z",
     "iopub.status.busy": "2024-07-10T11:03:17.179122Z",
     "iopub.status.idle": "2024-07-10T11:03:17.350109Z",
     "shell.execute_reply": "2024-07-10T11:03:17.348709Z"
    },
    "papermill": {
     "duration": 0.180999,
     "end_time": "2024-07-10T11:03:17.353145",
     "exception": false,
     "start_time": "2024-07-10T11:03:17.172146",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_data = pd.read_csv('/kaggle/input/hau/hau/train.tsv', sep='\\t')\n",
    "dev_data = pd.read_csv('/kaggle/input/hau/hau/dev.tsv', sep='\\t')\n",
    "test_data = pd.read_csv('/kaggle/input/hau/hau/train.tsv', sep='\\t')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9779b476",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T11:03:17.366418Z",
     "iopub.status.busy": "2024-07-10T11:03:17.366002Z",
     "iopub.status.idle": "2024-07-10T11:03:17.388029Z",
     "shell.execute_reply": "2024-07-10T11:03:17.386713Z"
    },
    "papermill": {
     "duration": 0.032001,
     "end_time": "2024-07-10T11:03:17.390801",
     "exception": false,
     "start_time": "2024-07-10T11:03:17.358800",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tweet</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>@user Da kudin da Arewa babu wani abin azo aga...</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>@user Kaga wani Adu ar BandaðŸ’”ðŸ˜­ wai a haka Shi ...</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>@user Sai haquri fa yan madrid daman kunce cha...</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>@user Hmmm yanzu kai kasan girman allah daxaka...</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>@user @user Wai gwamno nin Nigeria suna afa kw...</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               tweet     label\n",
       "0  @user Da kudin da Arewa babu wani abin azo aga...  negative\n",
       "1  @user Kaga wani Adu ar BandaðŸ’”ðŸ˜­ wai a haka Shi ...  negative\n",
       "2  @user Sai haquri fa yan madrid daman kunce cha...  negative\n",
       "3  @user Hmmm yanzu kai kasan girman allah daxaka...  negative\n",
       "4  @user @user Wai gwamno nin Nigeria suna afa kw...  negative"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "3b335e31",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T11:03:17.404221Z",
     "iopub.status.busy": "2024-07-10T11:03:17.403834Z",
     "iopub.status.idle": "2024-07-10T11:03:17.415159Z",
     "shell.execute_reply": "2024-07-10T11:03:17.413984Z"
    },
    "papermill": {
     "duration": 0.020952,
     "end_time": "2024-07-10T11:03:17.417539",
     "exception": false,
     "start_time": "2024-07-10T11:03:17.396587",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tweet</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>@user Da kudin da Arewa babu wani abin azo aga...</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>@user Kaga wani Adu ar BandaðŸ’”ðŸ˜­ wai a haka Shi ...</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>@user Sai haquri fa yan madrid daman kunce cha...</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>@user Hmmm yanzu kai kasan girman allah daxaka...</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>@user @user Wai gwamno nin Nigeria suna afa kw...</td>\n",
       "      <td>negative</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               tweet     label\n",
       "0  @user Da kudin da Arewa babu wani abin azo aga...  negative\n",
       "1  @user Kaga wani Adu ar BandaðŸ’”ðŸ˜­ wai a haka Shi ...  negative\n",
       "2  @user Sai haquri fa yan madrid daman kunce cha...  negative\n",
       "3  @user Hmmm yanzu kai kasan girman allah daxaka...  negative\n",
       "4  @user @user Wai gwamno nin Nigeria suna afa kw...  negative"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "6c7f7fe9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T11:03:17.431641Z",
     "iopub.status.busy": "2024-07-10T11:03:17.430898Z",
     "iopub.status.idle": "2024-07-10T11:03:17.440007Z",
     "shell.execute_reply": "2024-07-10T11:03:17.438892Z"
    },
    "papermill": {
     "duration": 0.018861,
     "end_time": "2024-07-10T11:03:17.442454",
     "exception": false,
     "start_time": "2024-07-10T11:03:17.423593",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<bound method Series.unique of 0        negative\n",
       "1        negative\n",
       "2        negative\n",
       "3        negative\n",
       "4        negative\n",
       "           ...   \n",
       "14167    positive\n",
       "14168    positive\n",
       "14169    positive\n",
       "14170    positive\n",
       "14171    positive\n",
       "Name: label, Length: 14172, dtype: object>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data['label'].unique"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "e495cb1d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T11:03:17.457452Z",
     "iopub.status.busy": "2024-07-10T11:03:17.456412Z",
     "iopub.status.idle": "2024-07-10T11:03:17.471168Z",
     "shell.execute_reply": "2024-07-10T11:03:17.470082Z"
    },
    "papermill": {
     "duration": 0.024999,
     "end_time": "2024-07-10T11:03:17.473679",
     "exception": false,
     "start_time": "2024-07-10T11:03:17.448680",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>word</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>da</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>allah</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ya</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>a</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ba</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    word\n",
       "0     da\n",
       "1  allah\n",
       "2     ya\n",
       "3      a\n",
       "4     ba"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Load stop words\n",
    "stop_words = pd.read_csv('/kaggle/input/hau_stop.csv')\n",
    "stop_word_list = stop_words['word'].tolist()  \n",
    "stop_words.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "139931a3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T11:03:17.488406Z",
     "iopub.status.busy": "2024-07-10T11:03:17.488000Z",
     "iopub.status.idle": "2024-07-10T11:03:17.932991Z",
     "shell.execute_reply": "2024-07-10T11:03:17.931649Z"
    },
    "papermill": {
     "duration": 0.455974,
     "end_time": "2024-07-10T11:03:17.936103",
     "exception": false,
     "start_time": "2024-07-10T11:03:17.480129",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "vectorizer = TfidfVectorizer(max_features=1000, stop_words=stop_word_list)\n",
    "X_train = vectorizer.fit_transform(train_data['tweet'])\n",
    "y_train = train_data['label']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "f7333030",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T11:03:17.951971Z",
     "iopub.status.busy": "2024-07-10T11:03:17.951558Z",
     "iopub.status.idle": "2024-07-10T11:03:34.182793Z",
     "shell.execute_reply": "2024-07-10T11:03:34.181648Z"
    },
    "papermill": {
     "duration": 16.242125,
     "end_time": "2024-07-10T11:03:34.185200",
     "exception": false,
     "start_time": "2024-07-10T11:03:17.943075",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(random_state=42)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "RandomForestClassifier(random_state=42)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model = RandomForestClassifier(n_estimators=100, random_state=42)\n",
    "model.fit(X_train, y_train)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "1004c6a7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T11:03:34.200569Z",
     "iopub.status.busy": "2024-07-10T11:03:34.200113Z",
     "iopub.status.idle": "2024-07-10T11:03:35.569529Z",
     "shell.execute_reply": "2024-07-10T11:03:35.568337Z"
    },
    "papermill": {
     "duration": 1.3807,
     "end_time": "2024-07-10T11:03:35.572666",
     "exception": false,
     "start_time": "2024-07-10T11:03:34.191966",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X_test = vectorizer.transform(test_data['tweet'])\n",
    "y_test = test_data['label']\n",
    "predictions = model.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "3e10456d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T11:03:35.588361Z",
     "iopub.status.busy": "2024-07-10T11:03:35.587939Z",
     "iopub.status.idle": "2024-07-10T11:03:36.380495Z",
     "shell.execute_reply": "2024-07-10T11:03:36.379131Z"
    },
    "papermill": {
     "duration": 0.803434,
     "end_time": "2024-07-10T11:03:36.383303",
     "exception": false,
     "start_time": "2024-07-10T11:03:35.579869",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.9628139994355066\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "    negative       0.98      0.95      0.97      4573\n",
      "     neutral       0.93      0.98      0.95      4912\n",
      "    positive       0.98      0.96      0.97      4687\n",
      "\n",
      "    accuracy                           0.96     14172\n",
      "   macro avg       0.96      0.96      0.96     14172\n",
      "weighted avg       0.96      0.96      0.96     14172\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(\"Accuracy:\", accuracy_score(y_test, predictions))\n",
    "print(classification_report(y_test, predictions))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b3888234",
   "metadata": {
    "papermill": {
     "duration": 0.00667,
     "end_time": "2024-07-10T11:03:36.396980",
     "exception": false,
     "start_time": "2024-07-10T11:03:36.390310",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "5e19f484",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-10T11:03:36.413253Z",
     "iopub.status.busy": "2024-07-10T11:03:36.412356Z",
     "iopub.status.idle": "2024-07-10T11:03:37.205742Z",
     "shell.execute_reply": "2024-07-10T11:03:37.204365Z"
    },
    "papermill": {
     "duration": 0.804484,
     "end_time": "2024-07-10T11:03:37.208369",
     "exception": false,
     "start_time": "2024-07-10T11:03:36.403885",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 0.9628139994355066\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "    negative       0.98      0.95      0.97      4573\n",
      "     neutral       0.93      0.98      0.95      4912\n",
      "    positive       0.98      0.96      0.97      4687\n",
      "\n",
      "    accuracy                           0.96     14172\n",
      "   macro avg       0.96      0.96      0.96     14172\n",
      "weighted avg       0.96      0.96      0.96     14172\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(\"Accuracy:\", accuracy_score(y_test, predictions))\n",
    "print(classification_report(y_test, predictions))"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 5276976,
     "sourceId": 8779545,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30732,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 27.254966,
   "end_time": "2024-07-10T11:03:37.938162",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-07-10T11:03:10.683196",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
